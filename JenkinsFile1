pipeline {
    agent any
    stages {
        stage('github validation') {
            steps {
                git url: 'https://github.com/saidevops8989/addressbook-project'
            }
        }
        stage('compiling the code') {
            steps {
                sh 'mvn compile'
            }
        }
        stage('testing the code') {
            steps {
                sh 'mvn test'
            }
        }
        stage('qa of the code') {
            steps {
                sh 'mvn pmd:pmd'
            }
        }
        stage('package') {
            steps {
                sh 'mvn package'
            }
        }
        stage("deploy the project on tomcat") {
            steps {
                script {
                    def env = input(
                        prompt: 'Select environment to deploy',
                        options: [
                            [name: 'dev', value: 'dev'],
                            [name: 'qa', value: 'qa'],
                            [name: 'prod', value: 'prod']
                        ]
                    )
                    if (env == 'dev') {
                        sshagent(['your-ssh-credentials-id']) {
                            sh "scp /var/lib/jenkins/workspace/mypipeline/target/addressbook.war ubuntu@dev-server-ip:/home/ubuntu/apache-tomcat-8.6.100/webapps/"
                        }
                    } else if (env == 'qa') {
                        sshagent(['your-ssh-credentials-id']) {
                            sh "scp /var/lib/jenkins/workspace/mypipeline/target/addressbook.war ubuntu@qa-server-ip:/home/ubuntu/apache-tomcat-8.6.100/webapps/"
                        }
                    } else if (env == 'prod') {
                        sshagent(['your-ssh-credentials-id']) {
                            sh "scp /var/lib/jenkins/workspace/mypipeline/target/addressbook.war ubuntu@prod-server-ip:/home/ubuntu/apache-tomcat-8.6.100/webapps/"
                        }
                    }
                }
            }
        }
    }
}
