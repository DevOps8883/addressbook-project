pipeline {
    agent any

    environment {
        // Define sensitive data securely using Jenkins credentials
        TOMCAT_URL = 'http://13.40.176.18:8080'
        DEPLOY_PATH = '/myapp'  // Change this to your app context path
    }

    stages {
        stage('Checkout') {
            steps {
                git url: 'https://github.com/YOUR_USERNAME/YOUR_REPO.git', branch: 'main'
            }
        }

        stage('Compile') {
            steps {
                sh 'mvn compile'
            }
        }

        stage('Unit Test') {
            steps {
                sh 'mvn test'
            }
        }

        stage('QA (Static Analysis)') {
            steps {
                sh 'mvn checkstyle:check'
            }
        }

        stage('Package') {
            steps {
                sh 'mvn package'
            }
        }

        stage('Deploy to Tomcat') {
            environment {
                // Fetch Jenkins credentials securely
                TOMCAT_CRED = credentials('tomcat-manager-creds') // Jenkins credentials ID
            }
            steps {
                script {
                    def warFile = sh(script: "ls target/*.war", returnStdout: true).trim()
                    sh """
                    curl -v -u ${TOMCAT_CRED_USR}:${TOMCAT_CRED_PSW} \
                      --upload-file "${warFile}" \
                      "${TOMCAT_URL}/manager/text/deploy?path=${DEPLOY_PATH}&update=true"
                    """
                }
            }
        }
    }

    post {
        success {
            echo 'üéâ Deployment completed successfully!'
        }
        failure {
            echo '‚ùå Build or deployment failed.'
        }
    }
}
